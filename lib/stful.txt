
class MyApp extends StatefulWidget {
  const MyApp({Key key}) : super(key: key);

  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> with WidgetsBindingObserver {
  String _setList = null;
  String State = 'null';
//initState called when the widget is mounted.
  void initState() {
    super.initState();
    if (_setList == null) {
      DBHelper.dbHelper.mobileConnect().then((String s) => setState(() {
            _setList = s;
          }));
    }
    print('init');
    WidgetsBinding.instance.addObserver(this);
  }

  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    if (state == AppLifecycleState.resumed) {
      print('resume');
      DBHelper.dbHelper.mobileConnect().then((String s) => setState(() {
            _setList = s;
          }));
    }
  }

  @override
  void dispose() {
    WidgetsBinding.instance.removeObserver(this);
    print('remove');
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    String setList = _setList ?? 'haha';
    print(State);
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: "Flutter Test",
      theme: ThemeData(
        // This is the theme of your application.
        //
        // Try running your application with "flutter run". You'll see the
        // application has a blue toolbar. Then, without quitting the app, try
        // changing the primarySwatch below to Colors.green and then invoke
        // "hot reload" (press "r" in the console where you ran "flutter run",
        // or simply save your changes to "hot reload" in a Flutter IDE).
        // Notice that the counter didn't reset back to zero; the application
        // is not restarted.
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: Text(setList),
    );
  }
}